---
- name: Update and Upgrade the apt packages before proceeding
  block:
    - name: performing the Update
      ansible.builtin.apt:
        update_cache: true

- name: Block to manage Swap space
  block:
    - name: Check for swap to be on
      ansible.builtin.shell: "swapon -s | wc -l"
      register: number_of_swap
      changed_when: false

    - name: Turning off swaps
      ansible.builtin.shell: "swapoff -a"
      when: number_of_swap.stdout != 0

    - name: Check for swap in /etc/fstab
      ansible.builtin.shell: "sudo cat /etc/fstab | awk '{print $3}' | grep swap | wc -l"
      register: number_in_fstab
      changed_when: false

    - name: Changing entries in fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '.*swap.*'
        line: '# \g<0>'
      when: number_in_fstab.stdout != '0'

- name: Change the hostname 
  ansible.builtin.hostname:
    name: master

- name: Making necessary changes in the etc hosts file
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "192.168.56.113 master"
    state: present

- name: Configure the sysctl for kubernetes
  ansible.builtin.shell: "{{ item }}"
  loop:
    - "echo 'net.bridge.bridge-nf-call-ip6tables = 1' | tee /etc/sysctl.d/k8s.conf"
    - "echo 'net.bridge.bridge-nf-call-iptables = 1' | tee -a /etc/sysctl.d/k8s.conf"
    - "sysctl --system"
  ignore_errors: yes

- name: Check if br_netfilter is set
  ansible.builtin.shell: "lsmod | grep br_net | wc -l"
  register: lsmod_results

- name: Load br_netfilter module
  ansible.builtin.shell: "{{ item }}"
  loop:
    - "echo 'br_netfilter' | tee /etc/modules-load.d/k8s.conf"
    - "modprobe br_netfilter"
  ignore_errors: yes
  when: lsmod_results.stdout != '2'

- name: Checking for ip_forward configurations
  ansible.builtin.shell: "cat /proc/sys/net/ipv4/ip_forward"
  register: ip_forward_result
  changed_when: false

- name: Forward IP persistently if required
  block:
    - name: Forwarding the IP in sysctl
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        line: "net.ipv4.ip_forward=1"
        state: present
      register: forwarded 

    - name: Change the ip_forward for runtime
      ansible.builtin.shell: "sysctl -w net.ipv4.ip_forward=1"

    - name: Reloading the sysctl config
      ansible.builtin.shell: "sysctl -p /etc/sysctl.conf"
      when: forwarded is changed 
  when: ip_forward_result.stdout != '1'
